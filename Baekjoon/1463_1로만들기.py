"""
정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

X가 3으로 나누어 떨어지면, 3으로 나눈다.
X가 2로 나누어 떨어지면, 2로 나눈다.
1을 뺀다.
정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.
"""

N = int(input())
dp = [0] * (N + 1)
for i in range(2, N + 1):   # 2부터 N까지 dp[i]에는 i가 1이 되기 위한 최소연산횟수를 담게된다.
    dp[i] = dp[i - 1] + 1   # 1을 빼는 연산 (1회 진행)
    if(i % 2 == 0):         # 근데 i가 만약 2로 나누어떨어지는 수라면
        dp[i] = min(dp[i], dp[i//2] + 1)    # 2로 나누는 경우의수에 대한 최소연산횟수가 어떤건지 비교하기
        # (여기서 dp[i//2] + 1 == i를 2로 나눈 값이 1이 되는데 걸리는 최소연산횟수 + i를 2로 나누는 연산횟수 1회)
    if(i % 3 == 0):         # i가 만약 3으로 나누어떨어지는 수라면
        dp[i] = min(dp[i], dp[i // 3] + 1)  #
        # (여기서 dp[i//3] + 1 == i를 3으로 나눈 값이 1이 되는데 걸리는 최소연산횟수 + i를 3으로 나누는 연산횟수 1회)

print(dp[N])